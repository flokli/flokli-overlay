diff --git a/server/async.c b/server/async.c
index dd28dff..b6544f8 100644
--- a/server/async.c
+++ b/server/async.c
@@ -101,9 +101,9 @@ static const struct object_ops async_queue_ops =
 };
 
 
-static inline void async_reselect( struct async *async )
+static inline void async_event( struct async *async, int finished )
 {
-    if (async->queue->fd) fd_reselect_async( async->queue->fd, async->queue );
+    if (async->queue->fd) fd_async_event( async->queue->fd, async->queue, async, async->status, finished );
 }
 
 static void async_dump( struct object *obj, int verbose )
@@ -119,7 +119,7 @@ static void async_destroy( struct object *obj )
     assert( obj->ops == &async_ops );
 
     list_remove( &async->queue_entry );
-    async_reselect( async );
+    async_event( async, TRUE );
 
     if (async->timeout) remove_timeout_user( async->timeout );
     if (async->event) release_object( async->event );
@@ -157,7 +157,7 @@ void async_terminate( struct async *async, unsigned int status )
     data.async_io.status = status;
     thread_queue_apc( async->thread, &async->obj, &data );
     async->status = status;
-    async_reselect( async );
+    async_event( async, FALSE );
     release_object( async );  /* so that it gets destroyed when the async is done */
 }
 
@@ -251,7 +251,7 @@ void async_set_result( struct object *obj, unsigned int status, unsigned int tot
         if (status != STATUS_ALERTED)  /* it was terminated in the meantime */
             async_terminate( async, status );
         else
-            async_reselect( async );
+            async_event( async, FALSE );
     }
     else
     {
diff --git a/server/change.c b/server/change.c
index 7c6c26c..2e4a113 100644
--- a/server/change.c
+++ b/server/change.c
@@ -202,7 +202,7 @@ static const struct fd_ops dir_fd_ops =
     default_fd_removable,        /* removable */
     default_fd_ioctl,            /* ioctl */
     default_fd_queue_async,      /* queue_async */
-    default_fd_reselect_async,   /* reselect_async */
+    default_fd_async_event,      /* async_event */
     default_fd_cancel_async      /* cancel_async */
 };
 
@@ -618,8 +618,8 @@ static const struct fd_ops inotify_fd_ops =
     NULL,                        /* removable */
     NULL,                        /* ioctl */
     NULL,                        /* queue_async */
-    NULL,                        /* reselect_async */
-    NULL,                        /* cancel_async */
+    NULL,                        /* async_event */
+    NULL                         /* cancel_async */
 };
 
 static int inotify_get_poll_events( struct fd *fd )
diff --git a/server/device.c b/server/device.c
index f0116c8..c658c28 100644
--- a/server/device.c
+++ b/server/device.c
@@ -156,7 +156,7 @@ static const struct fd_ops device_fd_ops =
     default_fd_removable,             /* removable */
     device_ioctl,                     /* ioctl */
     default_fd_queue_async,           /* queue_async */
-    default_fd_reselect_async,        /* reselect_async */
+    default_fd_async_event,           /* async_event */
     default_fd_cancel_async           /* cancel_async */
 };
 
diff --git a/server/fd.c b/server/fd.c
index 473cfe6..95e9e21 100644
--- a/server/fd.c
+++ b/server/fd.c
@@ -2058,9 +2058,9 @@ void fd_async_wake_up( struct fd *fd, int type, unsigned int status )
     }
 }
 
-void fd_reselect_async( struct fd *fd, struct async_queue *queue )
+void fd_async_event( struct fd *fd, struct async_queue *queue, struct async *async, int status, int finished )
 {
-    fd->fd_ops->reselect_async( fd, queue );
+    fd->fd_ops->async_event( fd, queue, async, status, finished );
 }
 
 void no_fd_queue_async( struct fd *fd, const async_data_t *data, int type, int count )
@@ -2079,8 +2079,8 @@ void default_fd_queue_async( struct fd *fd, const async_data_t *data, int type,
     }
 }
 
-/* default reselect_async() fd routine */
-void default_fd_reselect_async( struct fd *fd, struct async_queue *queue )
+/* default async_event() fd routine */
+void default_fd_async_event( struct fd *fd, struct async_queue *queue, struct async *async, int status, int finished )
 {
     if (queue != fd->wait_q)
     {
diff --git a/server/file.c b/server/file.c
index ac43f0b..e4ecf09 100644
--- a/server/file.c
+++ b/server/file.c
@@ -105,7 +105,7 @@ static const struct fd_ops file_fd_ops =
     default_fd_removable,         /* removable */
     default_fd_ioctl,             /* ioctl */
     default_fd_queue_async,       /* queue_async */
-    default_fd_reselect_async,    /* reselect_async */
+    default_fd_async_event,       /* async_event */
     default_fd_cancel_async       /* cancel_async */
 };
 
diff --git a/server/file.h b/server/file.h
index 0d3963f..c784632 100644
--- a/server/file.h
+++ b/server/file.h
@@ -25,6 +25,7 @@
 
 struct fd;
 struct async_queue;
+struct async;
 struct completion;
 
 /* operations valid on file descriptor objects */
@@ -45,8 +46,8 @@ struct fd_ops
                           const void *data, data_size_t size);
     /* queue an async operation */
     void (*queue_async)(struct fd *, const async_data_t *data, int type, int count);
-    /* selected events for async i/o need an update */
-    void (*reselect_async)( struct fd *, struct async_queue *queue );
+    /* an async request changed state (or being destroyed) */
+    void (*async_event)(struct fd *, struct async_queue *queue, struct async *async, int status, int finished);
     /* cancel an async operation */
     void (*cancel_async)(struct fd *, struct process *process, struct thread *thread, client_ptr_t iosb);
 };
@@ -83,14 +84,14 @@ extern int default_fd_get_poll_events( struct fd *fd );
 extern void default_poll_event( struct fd *fd, int event );
 extern struct async *fd_queue_async( struct fd *fd, const async_data_t *data, int type );
 extern void fd_async_wake_up( struct fd *fd, int type, unsigned int status );
-extern void fd_reselect_async( struct fd *fd, struct async_queue *queue );
+extern void fd_async_event( struct fd *fd, struct async_queue *queue, struct async *async, int status, int finished );
 extern obj_handle_t no_fd_ioctl( struct fd *fd, ioctl_code_t code, const async_data_t *async,
                                  int blocking, const void *data, data_size_t size );
 extern obj_handle_t default_fd_ioctl( struct fd *fd, ioctl_code_t code, const async_data_t *async,
                                       int blocking, const void *data, data_size_t size );
 extern void no_fd_queue_async( struct fd *fd, const async_data_t *data, int type, int count );
 extern void default_fd_queue_async( struct fd *fd, const async_data_t *data, int type, int count );
-extern void default_fd_reselect_async( struct fd *fd, struct async_queue *queue );
+extern void default_fd_async_event( struct fd *fd, struct async_queue *queue, struct async *async, int status, int finished );
 extern void default_fd_cancel_async( struct fd *fd, struct process *process, struct thread *thread, client_ptr_t iosb );
 extern void no_flush( struct fd *fd, struct event **event );
 extern void main_loop(void);
diff --git a/server/mailslot.c b/server/mailslot.c
index fa20c83..bfb5157 100644
--- a/server/mailslot.c
+++ b/server/mailslot.c
@@ -102,7 +102,7 @@ static const struct fd_ops mailslot_fd_ops =
     default_fd_removable,       /* removable */
     default_fd_ioctl,           /* ioctl */
     mailslot_queue_async,       /* queue_async */
-    default_fd_reselect_async,  /* reselect_async */
+    default_fd_async_event,     /* async_event */
     default_fd_cancel_async     /* cancel_async */
 };
 
@@ -153,7 +153,7 @@ static const struct fd_ops mail_writer_fd_ops =
     default_fd_removable,        /* removable */
     default_fd_ioctl,            /* ioctl */
     default_fd_queue_async,      /* queue_async */
-    default_fd_reselect_async,   /* reselect_async */
+    default_fd_async_event,      /* async_event */
     default_fd_cancel_async      /* cancel_async */
 };
 
@@ -204,7 +204,7 @@ static const struct fd_ops mailslot_device_fd_ops =
     default_fd_removable,           /* removable */
     default_fd_ioctl,               /* ioctl */
     default_fd_queue_async,         /* queue_async */
-    default_fd_reselect_async,      /* reselect_async */
+    default_fd_async_event,         /* async_event */
     default_fd_cancel_async         /* cancel_async */
 };
 
diff --git a/server/mapping.c b/server/mapping.c
index 752a4c3..b8957de 100644
--- a/server/mapping.c
+++ b/server/mapping.c
@@ -100,7 +100,7 @@ static const struct fd_ops mapping_fd_ops =
     default_fd_removable,         /* removable */
     no_fd_ioctl,                  /* ioctl */
     no_fd_queue_async,            /* queue_async */
-    default_fd_reselect_async,    /* reselect_async */
+    default_fd_async_event,       /* async_event */
     default_fd_cancel_async       /* cancel_async */
 };
 
diff --git a/server/named_pipe.c b/server/named_pipe.c
index 1d1e03a..80e2ef8 100644
--- a/server/named_pipe.c
+++ b/server/named_pipe.c
@@ -171,8 +171,8 @@ static const struct fd_ops pipe_server_fd_ops =
     default_fd_removable,         /* removable */
     pipe_server_ioctl,            /* ioctl */
     default_fd_queue_async,       /* queue_async */
-    default_fd_reselect_async,    /* reselect_async */
-    default_fd_cancel_async,      /* cancel_async */
+    default_fd_async_event,       /* async_event */
+    default_fd_cancel_async       /* cancel_async */
 };
 
 /* client end functions */
@@ -212,7 +212,7 @@ static const struct fd_ops pipe_client_fd_ops =
     default_fd_removable,         /* removable */
     default_fd_ioctl,             /* ioctl */
     default_fd_queue_async,       /* queue_async */
-    default_fd_reselect_async,    /* reselect_async */
+    default_fd_async_event,       /* async_event */
     default_fd_cancel_async       /* cancel_async */
 };
 
@@ -257,7 +257,7 @@ static const struct fd_ops named_pipe_device_fd_ops =
     default_fd_removable,             /* removable */
     named_pipe_device_ioctl,          /* ioctl */
     default_fd_queue_async,           /* queue_async */
-    default_fd_reselect_async,        /* reselect_async */
+    default_fd_async_event,           /* async_event */
     default_fd_cancel_async           /* cancel_async */
 };
 
diff --git a/server/process.c b/server/process.c
index 3dec3ac..0e0384c 100644
--- a/server/process.c
+++ b/server/process.c
@@ -94,7 +94,7 @@ static const struct fd_ops process_fd_ops =
     NULL,                        /* removable */
     NULL,                        /* ioctl */
     NULL,                        /* queue_async */
-    NULL,                        /* reselect_async */
+    NULL,                        /* async_event */
     NULL                         /* cancel async */
 };
 
diff --git a/server/queue.c b/server/queue.c
index e805600..abbd6ea 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -174,7 +174,7 @@ static const struct fd_ops msg_queue_fd_ops =
     NULL,                        /* removable */
     NULL,                        /* ioctl */
     NULL,                        /* queue_async */
-    NULL,                        /* reselect_async */
+    NULL,                        /* async_event */
     NULL                         /* cancel async */
 };
 
diff --git a/server/request.c b/server/request.c
index f170fb6..e51ff84 100644
--- a/server/request.c
+++ b/server/request.c
@@ -113,7 +113,7 @@ static const struct fd_ops master_socket_fd_ops =
     NULL,                          /* removable */
     NULL,                          /* ioctl */
     NULL,                          /* queue_async */
-    NULL,                          /* reselect_async */
+    NULL,                          /* async_event */
     NULL                           /* cancel_async */
 };
 
diff --git a/server/serial.c b/server/serial.c
index 9a61e71..f43f241 100644
--- a/server/serial.c
+++ b/server/serial.c
@@ -112,7 +112,7 @@ static const struct fd_ops serial_fd_ops =
     default_fd_removable,         /* removable */
     default_fd_ioctl,             /* ioctl */
     serial_queue_async,           /* queue_async */
-    default_fd_reselect_async,    /* reselect_async */
+    default_fd_async_event,       /* async_event */
     default_fd_cancel_async       /* cancel_async */
 };
 
diff --git a/server/signal.c b/server/signal.c
index 11004fb..ae08f4b 100644
--- a/server/signal.c
+++ b/server/signal.c
@@ -90,7 +90,7 @@ static const struct fd_ops handler_fd_ops =
     NULL,                     /* removable */
     NULL,                     /* ioctl */
     NULL,                     /* queue_async */
-    NULL,                     /* reselect_async */
+    NULL,                     /* async_event */
     NULL                      /* cancel_async */
 };
 
diff --git a/server/sock.c b/server/sock.c
index 11fb79c..7937688 100644
--- a/server/sock.c
+++ b/server/sock.c
@@ -121,7 +121,7 @@ static void sock_poll_event( struct fd *fd, int event );
 static enum server_fd_type sock_get_fd_type( struct fd *fd );
 static int sock_removable( struct fd *fd );
 static void sock_queue_async( struct fd *fd, const async_data_t *data, int type, int count );
-static void sock_reselect_async( struct fd *fd, struct async_queue *queue );
+static void sock_async_event( struct fd *fd, struct async_queue *queue, struct async *async, int status, int finished );
 static void sock_cancel_async( struct fd *fd, struct process *process, struct thread *thread, client_ptr_t iosb );
 
 static int sock_get_ntstatus( int err );
@@ -157,7 +157,7 @@ static const struct fd_ops sock_fd_ops =
     sock_removable,               /* removable */
     default_fd_ioctl,             /* ioctl */
     sock_queue_async,             /* queue_async */
-    sock_reselect_async,          /* reselect_async */
+    sock_async_event,             /* async_event */
     sock_cancel_async             /* cancel_async */
 };
 
@@ -559,7 +559,7 @@ static void sock_queue_async( struct fd *fd, const async_data_t *data, int type,
     sock_reselect( sock );
 }
 
-static void sock_reselect_async( struct fd *fd, struct async_queue *queue )
+static void sock_async_event( struct fd *fd, struct async_queue *queue, struct async *async, int status, int finished )
 {
     struct sock *sock = get_fd_user( fd );
     sock_reselect( sock );
diff --git a/server/thread.c b/server/thread.c
index d0757a7..a0096a3 100644
--- a/server/thread.c
+++ b/server/thread.c
@@ -157,7 +157,7 @@ static const struct fd_ops thread_fd_ops =
     NULL,                       /* removable */
     NULL,                       /* ioctl */
     NULL,                       /* queue_async */
-    NULL,                       /* reselect_async */
+    NULL,                       /* async_event */
     NULL                        /* cancel_async */
 };
 
