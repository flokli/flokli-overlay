From 17cf414b947e96911462801a33fc7478c718f167 Mon Sep 17 00:00:00 2001
From: Mike Kaplinskiy <mike.kaplinskiy@gmail.com>
Date: Sun, 1 Nov 2009 16:46:08 -0500
Subject: [PATCH 6/9] server: add async_terminated to allow server-side request changes before user apc
To: wine-patches <wine-patches@winehq.org>

---
 server/async.c      |   28 ++++++++++++++++++----------
 server/change.c     |    2 ++
 server/device.c     |    1 +
 server/fd.c         |   11 +++++++++++
 server/file.c       |    1 +
 server/file.h       |    4 ++++
 server/mailslot.c   |   21 ++++++++++++---------
 server/mapping.c    |    1 +
 server/named_pipe.c |    3 +++
 server/process.c    |    1 +
 server/queue.c      |    1 +
 server/request.c    |    1 +
 server/serial.c     |    1 +
 server/signal.c     |    1 +
 server/sock.c       |    1 +
 server/thread.c     |    1 +
 16 files changed, 60 insertions(+), 19 deletions(-)

diff --git a/server/async.c b/server/async.c
index e6fb059..e19400d 100644
--- a/server/async.c
+++ b/server/async.c
@@ -149,16 +149,24 @@ void async_terminate( struct async *async, unsigned int status )
         return;
     }
 
-    memset( &data, 0, sizeof(data) );
-    data.type            = APC_ASYNC_IO;
-    data.async_io.func   = async->data.callback;
-    data.async_io.user   = async->data.arg;
-    data.async_io.sb     = async->data.iosb;
-    data.async_io.status = status;
-    thread_queue_apc( async->thread, &async->obj, &data );
-    async->status = status;
-    async_event( async, FALSE );
-    release_object( async );  /* so that it gets destroyed when the async is done */
+    if (async->queue->fd)
+        status = fd_async_terminated(async->queue->fd, async->queue, async, status);
+
+    if (status != STATUS_PENDING)
+    {
+        memset( &data, 0, sizeof(data) );
+        data.type            = APC_ASYNC_IO;
+        data.async_io.func   = async->data.callback;
+        data.async_io.user   = async->data.arg;
+        data.async_io.sb     = async->data.iosb;
+        data.async_io.status = status;
+        thread_queue_apc( async->thread, &async->obj, &data );
+        async->status = status;
+        async_event( async, FALSE );
+        release_object( async );  /* so that it gets destroyed when the async is done */
+    }
+    else
+        async_event( async, FALSE );
 }
 
 /* callback for timeout on an async request */
diff --git a/server/change.c b/server/change.c
index 5fbdcda..643ccc8 100644
--- a/server/change.c
+++ b/server/change.c
@@ -203,6 +203,7 @@ static const struct fd_ops dir_fd_ops =
     default_fd_ioctl,            /* ioctl */
     default_fd_queue_async,      /* queue_async */
     default_fd_async_event,      /* async_event */
+    default_fd_async_terminated, /* async_terminated */
     default_fd_cancel_async      /* cancel_async */
 };
 
@@ -619,6 +620,7 @@ static const struct fd_ops inotify_fd_ops =
     NULL,                        /* ioctl */
     NULL,                        /* queue_async */
     NULL,                        /* async_event */
+    NULL,                        /* async_terminated */
     NULL                         /* cancel_async */
 };
 
diff --git a/server/device.c b/server/device.c
index c658c28..13c3da0 100644
--- a/server/device.c
+++ b/server/device.c
@@ -157,6 +157,7 @@ static const struct fd_ops device_fd_ops =
     device_ioctl,                     /* ioctl */
     default_fd_queue_async,           /* queue_async */
     default_fd_async_event,           /* async_event */
+    default_fd_async_terminated,      /* async_terminated */
     default_fd_cancel_async           /* cancel_async */
 };
 
diff --git a/server/fd.c b/server/fd.c
index 6c9281f..a256044 100644
--- a/server/fd.c
+++ b/server/fd.c
@@ -2059,6 +2059,11 @@ void fd_async_event( struct fd *fd, struct async_queue *queue, struct async *asy
     fd->fd_ops->async_event( fd, queue, async, status, finished );
 }
 
+int fd_async_terminated( struct fd *fd, struct async_queue *queue, struct async *async, int status )
+{
+    return fd->fd_ops->async_terminated( fd, queue, async, status );
+}
+
 void no_fd_queue_async( struct fd *fd, const async_data_t *data, int type, int count )
 {
     set_error( STATUS_OBJECT_TYPE_MISMATCH );
@@ -2087,6 +2092,12 @@ void default_fd_async_event( struct fd *fd, struct async_queue *queue, struct as
     }
 }
 
+/* default async_terminated() fd routine */
+int default_fd_async_terminated( struct fd *fd, struct async_queue *queue, struct async *async, int status )
+{
+    return status;
+}
+
 /* default cancel_async() fd routine */
 void default_fd_cancel_async( struct fd *fd, struct process *process, struct thread *thread, client_ptr_t iosb )
 {
diff --git a/server/file.c b/server/file.c
index e4ecf09..4ed5775 100644
--- a/server/file.c
+++ b/server/file.c
@@ -106,6 +106,7 @@ static const struct fd_ops file_fd_ops =
     default_fd_ioctl,             /* ioctl */
     default_fd_queue_async,       /* queue_async */
     default_fd_async_event,       /* async_event */
+    default_fd_async_terminated,  /* async_terminated */
     default_fd_cancel_async       /* cancel_async */
 };
 
diff --git a/server/file.h b/server/file.h
index cbc25ff..0d20fcb 100644
--- a/server/file.h
+++ b/server/file.h
@@ -48,6 +48,8 @@ struct fd_ops
     void (*queue_async)(struct fd *, const async_data_t *data, int type, int count);
     /* an async request changed state (or being destroyed) */
     void (*async_event)(struct fd *, struct async_queue *queue, struct async *async, int status, int finished);
+    /* an async request was terminated, called before user apc */
+    int (*async_terminated)(struct fd *, struct async_queue *queue, struct async *async, int status);
     /* cancel an async operation */
     void (*cancel_async)(struct fd *, struct process *process, struct thread *thread, client_ptr_t iosb);
 };
@@ -85,6 +87,7 @@ extern void default_poll_event( struct fd *fd, int event );
 extern struct async *fd_queue_async( struct fd *fd, const async_data_t *data, int type );
 extern void fd_async_wake_up( struct fd *fd, int type, unsigned int status );
 extern void fd_async_event( struct fd *fd, struct async_queue *queue, struct async *async, int status, int finished );
+extern int fd_async_terminated( struct fd *fd, struct async_queue *queue, struct async *async, int status );
 extern obj_handle_t no_fd_ioctl( struct fd *fd, ioctl_code_t code, const async_data_t *async,
                                  int blocking, const void *data, data_size_t size );
 extern obj_handle_t default_fd_ioctl( struct fd *fd, ioctl_code_t code, const async_data_t *async,
@@ -92,6 +95,7 @@ extern obj_handle_t default_fd_ioctl( struct fd *fd, ioctl_code_t code, const as
 extern void no_fd_queue_async( struct fd *fd, const async_data_t *data, int type, int count );
 extern void default_fd_queue_async( struct fd *fd, const async_data_t *data, int type, int count );
 extern void default_fd_async_event( struct fd *fd, struct async_queue *queue, struct async *async, int status, int finished );
+extern int default_fd_async_terminated( struct fd *fd, struct async_queue *queue, struct async *async, int status );
 extern void default_fd_cancel_async( struct fd *fd, struct process *process, struct thread *thread, client_ptr_t iosb );
 extern void no_flush( struct fd *fd, struct event **event );
 extern void main_loop(void);
diff --git a/server/mailslot.c b/server/mailslot.c
index bfb5157..288370f 100644
--- a/server/mailslot.c
+++ b/server/mailslot.c
@@ -95,15 +95,16 @@ static void mailslot_queue_async( struct fd *fd, const async_data_t *data, int t
 
 static const struct fd_ops mailslot_fd_ops =
 {
-    default_fd_get_poll_events, /* get_poll_events */
-    default_poll_event,         /* poll_event */
-    no_flush,                   /* flush */
-    mailslot_get_fd_type,       /* get_fd_type */
-    default_fd_removable,       /* removable */
-    default_fd_ioctl,           /* ioctl */
-    mailslot_queue_async,       /* queue_async */
-    default_fd_async_event,     /* async_event */
-    default_fd_cancel_async     /* cancel_async */
+    default_fd_get_poll_events,  /* get_poll_events */
+    default_poll_event,          /* poll_event */
+    no_flush,                    /* flush */
+    mailslot_get_fd_type,        /* get_fd_type */
+    default_fd_removable,        /* removable */
+    default_fd_ioctl,            /* ioctl */
+    mailslot_queue_async,        /* queue_async */
+    default_fd_async_event,      /* async_event */
+    default_fd_async_terminated, /* async_terminated */
+    default_fd_cancel_async      /* cancel_async */
 };
 
 
@@ -154,6 +155,7 @@ static const struct fd_ops mail_writer_fd_ops =
     default_fd_ioctl,            /* ioctl */
     default_fd_queue_async,      /* queue_async */
     default_fd_async_event,      /* async_event */
+    default_fd_async_terminated, /* async_terminated */
     default_fd_cancel_async      /* cancel_async */
 };
 
@@ -205,6 +207,7 @@ static const struct fd_ops mailslot_device_fd_ops =
     default_fd_ioctl,               /* ioctl */
     default_fd_queue_async,         /* queue_async */
     default_fd_async_event,         /* async_event */
+    default_fd_async_terminated,    /* async_terminated */
     default_fd_cancel_async         /* cancel_async */
 };
 
diff --git a/server/mapping.c b/server/mapping.c
index b8957de..10560d3 100644
--- a/server/mapping.c
+++ b/server/mapping.c
@@ -101,6 +101,7 @@ static const struct fd_ops mapping_fd_ops =
     no_fd_ioctl,                  /* ioctl */
     no_fd_queue_async,            /* queue_async */
     default_fd_async_event,       /* async_event */
+    default_fd_async_terminated,  /* async_terminated */
     default_fd_cancel_async       /* cancel_async */
 };
 
diff --git a/server/named_pipe.c b/server/named_pipe.c
index 8916fa7..524bc8a 100644
--- a/server/named_pipe.c
+++ b/server/named_pipe.c
@@ -172,6 +172,7 @@ static const struct fd_ops pipe_server_fd_ops =
     pipe_server_ioctl,            /* ioctl */
     default_fd_queue_async,       /* queue_async */
     default_fd_async_event,       /* async_event */
+    default_fd_async_terminated,  /* async_terminated */
     default_fd_cancel_async       /* cancel_async */
 };
 
@@ -213,6 +214,7 @@ static const struct fd_ops pipe_client_fd_ops =
     default_fd_ioctl,             /* ioctl */
     default_fd_queue_async,       /* queue_async */
     default_fd_async_event,       /* async_event */
+    default_fd_async_terminated,  /* async_terminated */
     default_fd_cancel_async       /* cancel_async */
 };
 
@@ -258,6 +260,7 @@ static const struct fd_ops named_pipe_device_fd_ops =
     named_pipe_device_ioctl,          /* ioctl */
     default_fd_queue_async,           /* queue_async */
     default_fd_async_event,           /* async_event */
+    default_fd_async_terminated,      /* async_terminated */
     default_fd_cancel_async           /* cancel_async */
 };
 
diff --git a/server/process.c b/server/process.c
index 9a7db31..fd4d8b7 100644
--- a/server/process.c
+++ b/server/process.c
@@ -95,6 +95,7 @@ static const struct fd_ops process_fd_ops =
     NULL,                        /* ioctl */
     NULL,                        /* queue_async */
     NULL,                        /* async_event */
+    NULL,                        /* async_terminated */
     NULL                         /* cancel async */
 };
 
diff --git a/server/queue.c b/server/queue.c
index 26701f6..073de58 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -172,6 +172,7 @@ static const struct fd_ops msg_queue_fd_ops =
     NULL,                        /* ioctl */
     NULL,                        /* queue_async */
     NULL,                        /* async_event */
+    NULL,                        /* async_terminated */
     NULL                         /* cancel async */
 };
 
diff --git a/server/request.c b/server/request.c
index e51ff84..61b76a4 100644
--- a/server/request.c
+++ b/server/request.c
@@ -114,6 +114,7 @@ static const struct fd_ops master_socket_fd_ops =
     NULL,                          /* ioctl */
     NULL,                          /* queue_async */
     NULL,                          /* async_event */
+    NULL,                          /* async_terminated */
     NULL                           /* cancel_async */
 };
 
diff --git a/server/serial.c b/server/serial.c
index f43f241..11e6d9b 100644
--- a/server/serial.c
+++ b/server/serial.c
@@ -113,6 +113,7 @@ static const struct fd_ops serial_fd_ops =
     default_fd_ioctl,             /* ioctl */
     serial_queue_async,           /* queue_async */
     default_fd_async_event,       /* async_event */
+    default_fd_async_terminated,  /* async_terminated */
     default_fd_cancel_async       /* cancel_async */
 };
 
diff --git a/server/signal.c b/server/signal.c
index ae08f4b..487fa15 100644
--- a/server/signal.c
+++ b/server/signal.c
@@ -91,6 +91,7 @@ static const struct fd_ops handler_fd_ops =
     NULL,                     /* ioctl */
     NULL,                     /* queue_async */
     NULL,                     /* async_event */
+    NULL,                     /* async_terminated */
     NULL                      /* cancel_async */
 };
 
diff --git a/server/sock.c b/server/sock.c
index 7d706da..31e1f0b 100644
--- a/server/sock.c
+++ b/server/sock.c
@@ -133,6 +133,7 @@ static const struct fd_ops sock_fd_ops =
     default_fd_ioctl,             /* ioctl */
     sock_queue_async,             /* queue_async */
     sock_async_event,             /* async_event */
+    default_fd_async_terminated,  /* async_terminated */
     sock_cancel_async             /* cancel_async */
 };
 
diff --git a/server/thread.c b/server/thread.c
index 458805a..01f593b 100644
--- a/server/thread.c
+++ b/server/thread.c
@@ -159,6 +159,7 @@ static const struct fd_ops thread_fd_ops =
     NULL,                       /* ioctl */
     NULL,                       /* queue_async */
     NULL,                       /* async_event */
+    NULL,                       /* async_terminated */
     NULL                        /* cancel_async */
 };
 
-- 
1.6.5.7

