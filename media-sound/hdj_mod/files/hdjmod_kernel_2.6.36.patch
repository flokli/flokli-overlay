diff -Naru hdjmod-1.28.old/bulk.c hdjmod-1.28/bulk.c
--- hdjmod-1.28.old/bulk.c	2009-01-27 15:25:50.000000000 +0100
+++ hdjmod-1.28/bulk.c	2010-09-26 19:27:53.000000000 +0200
@@ -462,7 +462,7 @@
 
 	chip->ctrl_urb->setup_dma = chip->ctl_req_dma;
 	/* NOTE: transfer_dma setup above in call to usb_buffer_alloc() */
-	chip->ctrl_urb->transfer_flags = URB_NO_SETUP_DMA_MAP | URB_NO_TRANSFER_DMA_MAP;
+	chip->ctrl_urb->transfer_flags = URB_NO_TRANSFER_DMA_MAP;
 
 	ret = hdjbulk_submit_urb(chip, chip->ctrl_urb, GFP_KERNEL);
 	if (ret!=0) {
@@ -553,7 +553,7 @@
 				output_control_callback,
 				&ubulk->output_control_completion);
 	ubulk->output_control_urb->setup_dma = ubulk->output_control_dma;
-	ubulk->output_control_urb->transfer_flags = URB_NO_SETUP_DMA_MAP | URB_NO_TRANSFER_DMA_MAP;
+	ubulk->output_control_urb->transfer_flags = URB_NO_TRANSFER_DMA_MAP;
 	if ((rc =  hdjbulk_submit_urb(ubulk->chip,ubulk->output_control_urb, GFP_KERNEL))!=0) {
 		printk(KERN_WARNING"%s hdjbulk_submit_urb() failed, rc:%d\n",__FUNCTION__,rc);
 	} else {
@@ -2675,7 +2675,12 @@
 {
 	if (ubulk->chip->product_code!=DJCONTROLSTEEL_PRODUCT_CODE) {
 		if (ubulk->output_control_ctl_req!=NULL && ubulk->control_interface!=NULL) {
-			usb_buffer_free(interface_to_usbdev(ubulk->control_interface),
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+					interface_to_usbdev(ubulk->control_interface),
 					sizeof(*(ubulk->output_control_ctl_req)),
 					ubulk->output_control_ctl_req,
 					ubulk->output_control_dma);
@@ -2684,7 +2689,12 @@
 
 		if (ubulk->output_control_buffer!=NULL && ubulk->control_interface!=NULL &&
 		    ubulk->output_control_urb!=NULL) {
-			usb_buffer_free(interface_to_usbdev(ubulk->control_interface),
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+					interface_to_usbdev(ubulk->control_interface),
 					ubulk->output_control_urb->transfer_buffer_length,
 					ubulk->output_control_buffer,
 					ubulk->output_control_urb->transfer_dma);
@@ -2712,7 +2722,12 @@
 		usb_kill_urb(ubulk->bulk_out_urb);
 		if (free_urbs!=0) {
 			if (ubulk->bulk_out_buffer!=NULL) {
-				usb_buffer_free(ubulk->chip->dev, ubulk->bulk_out_size,
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+						ubulk->chip->dev, ubulk->bulk_out_size,
 						ubulk->bulk_out_urb->transfer_buffer,
 						ubulk->bulk_out_urb->transfer_dma);
 				ubulk->bulk_out_buffer = NULL;
@@ -3065,7 +3080,12 @@
 	init_MUTEX(&ubulk->bulk_out_buffer_mutex);
 	
 	ubulk->bulk_out_buffer =
-		usb_buffer_alloc(ubulk->chip->dev, ubulk->bulk_out_size,
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+			ubulk->chip->dev, ubulk->bulk_out_size,
 			GFP_KERNEL, &ubulk->bulk_out_urb->transfer_dma);
 
 	if (ubulk->bulk_out_buffer==NULL) {
@@ -3609,7 +3629,13 @@
 	 *  control state */
 	if (ubulk->chip->product_code != DJCONTROLSTEEL_PRODUCT_CODE) {	
 		/* allocate memory for setup packet for our control requests */
-		ubulk->output_control_ctl_req = usb_buffer_alloc(interface_to_usbdev(ubulk->control_interface), 
+		ubulk->output_control_ctl_req = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+								interface_to_usbdev(ubulk->control_interface), 
 						 		sizeof(*(ubulk->output_control_ctl_req)),
 						 		GFP_KERNEL, 
 								 &ubulk->output_control_dma);
@@ -3628,7 +3654,13 @@
 			goto hdjbulk_init_output_control_state_error;
 		}
 
-		ubulk->output_control_buffer = usb_buffer_alloc(interface_to_usbdev(ubulk->control_interface),
+		ubulk->output_control_buffer = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+								interface_to_usbdev(ubulk->control_interface),
 								ubulk->output_control_buffer_size, 
 								GFP_KERNEL,
 								&ubulk->output_control_urb->transfer_dma);
@@ -3773,7 +3805,13 @@
 		}
 
 		ep[i]->max_transfer = ubulk->continuous_reader_packet_size;
-		buffer = usb_buffer_alloc(ubulk->chip->dev, ep[i]->max_transfer,
+		buffer = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+					ubulk->chip->dev, ep[i]->max_transfer,
 					GFP_KERNEL, &ep[i]->urb->transfer_dma);
 		if (!buffer) {
 			printk(KERN_WARNING"%s() usb_buffer_alloc() failed\n",__FUNCTION__);
@@ -4250,7 +4288,12 @@
 {
 	if (ep->urb) {
 		if (ep->urb->transfer_buffer) {
-			usb_buffer_free(ep->ubulk->chip->dev, ep->max_transfer,
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+					ep->ubulk->chip->dev, ep->max_transfer,
 					ep->urb->transfer_buffer,
 					ep->urb->transfer_dma);
 		}
diff -Naru hdjmod-1.28.old/device.c hdjmod-1.28/device.c
--- hdjmod-1.28.old/device.c	2009-01-27 15:25:50.000000000 +0100
+++ hdjmod-1.28/device.c	2010-09-26 19:14:55.000000000 +0200
@@ -1559,7 +1559,12 @@
 
 	if(chip->ctrl_req_buffer != NULL)
 	{
-		usb_buffer_free(chip->dev,
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+				chip->dev,
 				chip->ctrl_urb->transfer_buffer_length,
 				chip->ctrl_req_buffer,
 				chip->ctrl_urb->transfer_dma);
@@ -1575,7 +1580,12 @@
 	
 	if(chip->ctl_req != NULL)
 	{
-		usb_buffer_free(chip->dev,
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+			chip->dev,
 			sizeof(*(chip->ctl_req)),
 			chip->ctl_req,
 			chip->ctl_req_dma);
@@ -1728,7 +1738,13 @@
 	}
 
 	/* allocate memory for setup packet for our control requests */
-	chip->ctl_req = usb_buffer_alloc(chip->dev, 
+	chip->ctl_req =
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+					 chip->dev, 
 					 sizeof(*(chip->ctl_req)),
 					 GFP_KERNEL, 
 					 &chip->ctl_req_dma);
@@ -1743,7 +1759,13 @@
 
 	chip->ctrl_req_buffer_len =  sizeof(u16);
 	chip->ctrl_urb->transfer_buffer_length = chip->ctrl_req_buffer_len;
-	chip->ctrl_req_buffer = usb_buffer_alloc(chip->dev, 
+	chip->ctrl_req_buffer = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+						 chip->dev, 
 						 chip->ctrl_urb->transfer_buffer_length,
 						 GFP_KERNEL, 
 						 &chip->ctrl_urb->transfer_dma);
diff -Naru hdjmod-1.28.old/midi.c hdjmod-1.28/midi.c
--- hdjmod-1.28.old/midi.c	2009-01-27 15:25:50.000000000 +0100
+++ hdjmod-1.28/midi.c	2010-09-26 19:38:35.000000000 +0200
@@ -367,7 +367,12 @@
 {
 	if (ep->urb) {
 		if (ep->urb->transfer_buffer) {
-			usb_buffer_free(ep->umidi->chip->dev,
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+					ep->umidi->chip->dev,
 					ep->urb->transfer_buffer_length,
 					ep->urb->transfer_buffer,
 					ep->urb->transfer_dma);
@@ -503,7 +508,13 @@
 		pipe = usb_rcvbulkpipe(umidi->chip->dev, ep_info->in_ep);
 	}
 	length = usb_maxpacket(umidi->chip->dev, pipe, 0);
-	buffer = usb_buffer_alloc(umidi->chip->dev, length, GFP_KERNEL,
+	buffer = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+				  umidi->chip->dev, length, GFP_KERNEL,
 				  &ep->urb->transfer_dma);
 	if (!buffer) {
 		snd_printk(KERN_WARNING"%s() usb_buffer_alloc failed\n",__FUNCTION__);
@@ -536,7 +547,12 @@
 #endif
 	if (ep->urb) {
 		if (ep->urb->transfer_buffer) {
-			usb_buffer_free(ep->umidi->chip->dev, ep->max_transfer,
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+					ep->umidi->chip->dev, ep->max_transfer,
 					ep->urb->transfer_buffer,
 					ep->urb->transfer_dma);
 		}
@@ -544,27 +560,47 @@
 	}
 	if (ep->urb_led) {
 		if (ep->urb_led->transfer_buffer) {
-			usb_buffer_free(ep->umidi->chip->dev, ep->max_transfer,
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+					ep->umidi->chip->dev, ep->max_transfer,
 					ep->urb_led->transfer_buffer,
 					ep->urb_led->transfer_dma);
 		}
 		usb_free_urb(ep->urb_led);	
 	}
 	if (ep->ctrl_req_led) {
-		usb_buffer_free(ep->umidi->chip->dev, sizeof(*(ep->ctrl_req_led)),
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+						ep->umidi->chip->dev, sizeof(*(ep->ctrl_req_led)),
 						ep->ctrl_req_led, ep->ctrl_req_led_dma);
 	}
 	if (ep->controller_state) {
 		if (ep->controller_state->output_control_ctl_urb &&
 			 ep->controller_state->output_control_ctl_urb->transfer_buffer &&
 			 ep->controller_state->output_control_ctl_urb->transfer_dma) {
-			usb_buffer_free(ep->umidi->chip->dev, ep->max_transfer,
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+					ep->umidi->chip->dev, ep->max_transfer,
 					ep->controller_state->output_control_ctl_urb->transfer_buffer,
 					ep->controller_state->output_control_ctl_urb->transfer_dma);
 		}
 		if (ep->controller_state->output_control_ctl_req &&
 			 ep->controller_state->output_control_ctl_dma) {
-			usb_buffer_free(ep->umidi->chip->dev, 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+					ep->umidi->chip->dev, 
 					sizeof(*(ep->controller_state->output_control_ctl_req)),
 					ep->controller_state->output_control_ctl_req,
 					ep->controller_state->output_control_ctl_dma);
@@ -573,7 +609,12 @@
 			usb_free_urb(ep->controller_state->output_control_ctl_urb);
 		}
 		if (ep->controller_state->ctl_req) {
-			usb_buffer_free(ep->umidi->chip->dev, 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+					ep->umidi->chip->dev, 
 					sizeof(*(ep->controller_state->ctl_req)),
 					ep->controller_state->ctl_req,
 					ep->controller_state->ctl_req_dma);
@@ -584,14 +625,24 @@
 		}
 		if (ep->controller_state->urb_kt) {
 			if (ep->controller_state->urb_kt->transfer_buffer) {
-				usb_buffer_free(ep->umidi->chip->dev, ep->max_transfer,
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+						ep->umidi->chip->dev, ep->max_transfer,
 						ep->controller_state->urb_kt->transfer_buffer,
 						ep->controller_state->urb_kt->transfer_dma);
 			}
 			usb_free_urb(ep->controller_state->urb_kt);
 		}
 		if (ep->controller_state->ctl_req_kt) {
-			usb_buffer_free(ep->umidi->chip->dev, 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_free_coherent(
+#else
+		usb_buffer_free(
+#endif
+					ep->umidi->chip->dev, 
 					sizeof(*(ep->controller_state->ctl_req_kt)),
 					ep->controller_state->ctl_req_kt,
 					ep->controller_state->ctl_req_dma_kt);
@@ -666,7 +717,13 @@
 		controller_state->is_weltrend = is_mp3_weltrend(ep->umidi->chip->usb_id);
 	}
 	
-	controller_state->ctl_req = usb_buffer_alloc(ep->umidi->chip->dev, 
+	controller_state->ctl_req = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+							ep->umidi->chip->dev, 
 							sizeof(*(controller_state->ctl_req)),
 							GFP_KERNEL, 
 							&controller_state->ctl_req_dma);
@@ -679,7 +736,13 @@
 	 *  mouse setting or setting LEDs */
 	init_MUTEX(&controller_state->output_control_ctl_mutex);
 	init_completion(&controller_state->output_control_ctl_completion);
-	controller_state->output_control_ctl_req = usb_buffer_alloc(ep->umidi->chip->dev, 
+	controller_state->output_control_ctl_req = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+							ep->umidi->chip->dev, 
 							sizeof(*(controller_state->output_control_ctl_req)),
 							GFP_KERNEL, 
 							&controller_state->output_control_ctl_dma);
@@ -700,7 +763,13 @@
 	max_transfer = usb_maxpacket(ep->umidi->chip->dev, 
 					controller_state->output_control_ctl_pipe, 1);
 	
-	buffer = usb_buffer_alloc(ep->umidi->chip->dev, max_transfer,
+	buffer = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+				  ep->umidi->chip->dev, max_transfer,
 				  GFP_KERNEL, &controller_state->output_control_ctl_urb->transfer_dma);
 	if (buffer==NULL) {
 		snd_printk(KERN_WARNING"%s() usb_buffer_alloc failed (general URB buffer)\n",
@@ -727,7 +796,7 @@
 	controller_state->output_control_ctl_req->wLength = cpu_to_le16(DJ_MP3_HID_OUTPUT_REPORT_LEN);
 	controller_state->output_control_ctl_urb->setup_dma = controller_state->output_control_ctl_dma;
 	/* NOTE: transfer_dma setup above in call to usb_buffer_alloc() */
-	controller_state->output_control_ctl_urb->transfer_flags = URB_NO_SETUP_DMA_MAP | URB_NO_TRANSFER_DMA_MAP;
+	controller_state->output_control_ctl_urb->transfer_flags = URB_NO_TRANSFER_DMA_MAP;
 	
 	return 0;
 }
@@ -772,7 +841,13 @@
 	}
 	
 	if (ep->umidi->chip->caps.leds_hid_controlled) {
-		ep->ctrl_req_led = usb_buffer_alloc(ep->umidi->chip->dev, 
+		ep->ctrl_req_led = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+								ep->umidi->chip->dev, 
 								sizeof(*(ep->ctrl_req_led)),
 								GFP_KERNEL, 
 								&ep->ctrl_req_led_dma);
@@ -806,7 +881,13 @@
 		pipe = usb_sndctrlpipe(umidi->chip->dev, 0);
 	}
 	ep->max_transfer = usb_maxpacket(umidi->chip->dev, pipe, 1);
-	buffer = usb_buffer_alloc(umidi->chip->dev, ep->max_transfer,
+	buffer = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+				  umidi->chip->dev, ep->max_transfer,
 				  GFP_KERNEL, &ep->urb->transfer_dma);
 	if (!buffer) {
 		snd_printk(KERN_WARNING"%s() usb_buffer_alloc() failed\n",__FUNCTION__);
@@ -814,7 +895,13 @@
 		return -ENOMEM;
 	}
 	
-	buffer_led = usb_buffer_alloc(umidi->chip->dev, ep->max_transfer,
+	buffer_led = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+				  umidi->chip->dev, ep->max_transfer,
 				  GFP_KERNEL, &ep->urb_led->transfer_dma);
 	if (!buffer_led) {
 		snd_printk(KERN_WARNING"%s() usb_buffer_alloc() failed for LED buffer\n",
@@ -854,7 +941,7 @@
 		ep->controller_state->ctl_req->wLength = cpu_to_le16(DJ_MP3_HID_OUTPUT_REPORT_LEN);
 		ep->urb->setup_dma = ep->controller_state->ctl_req_dma;
 		/* NOTE: transfer_dma setup above in call to usb_buffer_alloc() */
-		ep->urb->transfer_flags = URB_NO_SETUP_DMA_MAP | URB_NO_TRANSFER_DMA_MAP;
+		ep->urb->transfer_flags = URB_NO_TRANSFER_DMA_MAP;
 	}
 	
 	if (ep->umidi->chip->caps.leds_hid_controlled) {
@@ -875,7 +962,7 @@
 		ep->ctrl_req_led->wLength = cpu_to_le16(DJ_MP3_HID_OUTPUT_REPORT_LEN);
 		ep->urb_led->setup_dma = ep->ctrl_req_led_dma;
 		/* NOTE: transfer_dma setup above in call to usb_buffer_alloc() */
-		ep->urb_led->transfer_flags = URB_NO_SETUP_DMA_MAP | URB_NO_TRANSFER_DMA_MAP;
+		ep->urb_led->transfer_flags = URB_NO_TRANSFER_DMA_MAP;
 	}
 	
 	if (ep->umidi->chip->caps.leds_bulk_controlled) {
@@ -913,7 +1000,13 @@
 			return -ENOMEM;
 		}
 
-		buffer = usb_buffer_alloc(umidi->chip->dev, ep->max_transfer,
+		buffer = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+				  umidi->chip->dev, ep->max_transfer,
 				  GFP_KERNEL, &ep->controller_state->urb_kt->transfer_dma);
 		if (!buffer) {
 			snd_printk(KERN_WARNING"%s() usb_buffer_alloc() for wq failed\n",__FUNCTION__);
@@ -921,7 +1014,13 @@
 			return -ENOMEM;
 		}
 
-		ep->controller_state->ctl_req_kt = usb_buffer_alloc(umidi->chip->dev, 
+		ep->controller_state->ctl_req_kt = 
+#if ( LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,36) )
+		usb_alloc_coherent(
+#else
+		usb_buffer_alloc(
+#endif
+							umidi->chip->dev, 
 							sizeof(*(ep->controller_state->ctl_req_kt)),
 							GFP_KERNEL, 
 							&ep->controller_state->ctl_req_dma_kt);
@@ -947,7 +1046,7 @@
 		ep->controller_state->ctl_req_kt->wLength = cpu_to_le16(DJ_MP3_HID_OUTPUT_REPORT_LEN);
 		ep->controller_state->urb_kt->setup_dma = ep->controller_state->ctl_req_dma_kt;
 		/* NOTE: transfer_dma setup above in call to usb_buffer_alloc() */
-		ep->controller_state->urb_kt->transfer_flags = URB_NO_SETUP_DMA_MAP | URB_NO_TRANSFER_DMA_MAP;
+		ep->controller_state->urb_kt->transfer_flags = URB_NO_TRANSFER_DMA_MAP;
 	
 		init_completion(&ep->controller_state->ctl_req_completion_kt);
 		init_completion(&ep->controller_state->mp3w_kthread_started);
