From 29b8b20fd54dee4df6a405802b5ffe62b8a4f1a6 Mon Sep 17 00:00:00 2001
From: Alexandre Relange <alexandre.relange@gmail.com>
Date: Fri, 15 Oct 2010 12:44:57 +0200
Subject: [PATCH] arm: allow compilation for specific ARMv5 architecture

Removed ARMv6 assember specific code with preprocessor macros.
Replaced ATOMIC_ARM_INLINE_ASM specific macro with ARMV6_ASM more
explicit.
---
 configure.ac                |    2 +-
 src/pulsecore/atomic.h      |    2 +-
 src/pulsecore/svolume_arm.c |   11 +++++++----
 3 files changed, 9 insertions(+), 6 deletions(-)

diff --git a/configure.ac b/configure.ac
index 7ab42dc..01d9bc2 100644
--- a/configure.ac
+++ b/configure.ac
@@ -230,7 +230,7 @@ else
                     [pulseaudio_cv_support_arm_atomic_ops=no])
                  ])
                AS_IF([test "$pulseaudio_cv_support_arm_atomic_ops" = "yes"], [
-                   AC_DEFINE([ATOMIC_ARM_INLINE_ASM], 1, [Have ARMv6 instructions.])
+                   AC_DEFINE([ARMV6_ASM], 1, [Have ARMv6 instructions.])
                    need_libatomic_ops=no
                  ])
            fi
diff --git a/src/pulsecore/atomic.h b/src/pulsecore/atomic.h
index 51d0821..6eda64a 100644
--- a/src/pulsecore/atomic.h
+++ b/src/pulsecore/atomic.h
@@ -360,7 +360,7 @@ static inline pa_bool_t pa_atomic_ptr_cmpxchg(pa_atomic_ptr_t *a, void *old_p, v
     return result == old_p;
 }
 
-#elif defined(ATOMIC_ARM_INLINE_ASM)
+#elif defined(ARMV6_ASM)
 
 /*
    These should only be enabled if we have ARMv6 or better.
diff --git a/src/pulsecore/svolume_arm.c b/src/pulsecore/svolume_arm.c
index fdd8f09..28cdd39 100644
--- a/src/pulsecore/svolume_arm.c
+++ b/src/pulsecore/svolume_arm.c
@@ -35,7 +35,10 @@
 #include "sample-util.h"
 #include "endianmacros.h"
 
-#if defined (__arm__)
+#if defined (__arm__) && defined (ARMV6_ASM)
+/*
+  These functions are removed if explicitly compiled for an architecture that cannot understand ARMV6 instructions (SSAT and PKHBT)
+*/
 
 #define MOD_INC() \
     " subs  r0, r6, %2              \n\t" \
@@ -182,11 +185,11 @@ static void run_test (void) {
 }
 #endif
 
-#endif /* defined (__arm__) */
+#endif /* defined (__arm__) && defined (ARMV6_ASM) */
 
 
 void pa_volume_func_init_arm (pa_cpu_arm_flag_t flags) {
-#if defined (__arm__)
+#if defined (__arm__) && defined (ARMV6_ASM)
     pa_log_info("Initialising ARM optimized functions.");
 
 #ifdef RUN_TEST
@@ -194,5 +197,5 @@ void pa_volume_func_init_arm (pa_cpu_arm_flag_t flags) {
 #endif
 
     pa_set_volume_func (PA_SAMPLE_S16NE,     (pa_do_volume_func_t) pa_volume_s16ne_arm);
-#endif /* defined (__arm__) */
+#endif /* defined (__arm__) && defined (ARMV6_ASM) */
 }
-- 
1.7.1

